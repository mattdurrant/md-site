# .github/workflows/pages.yml
name: Build and Publish Site

on:
  schedule: [{ cron: '17 6 * * *' }]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-dotnet@v4
        with: { dotnet-version: '8.0.x' }

      # (debug helper) list where files actually are
      - name: Show repo layout
        run: |
          pwd
          ls -la
          echo "Solutions:"; find . -maxdepth 4 -name "*.sln" -print
          echo "Projects:";  find . -maxdepth 6 -name "*.csproj" -print

      # locate Hello.Worker project dynamically
      - name: Locate Hello worker
        id: locate
        run: |
          set -euo pipefail
          csproj="$(find "$GITHUB_WORKSPACE" -maxdepth 6 -name 'Hello.Worker.csproj' | head -n1)"
          if [ -z "$csproj" ]; then
            echo "Could not find Hello.Worker.csproj" >&2
            exit 1
          fi
          echo "Found: $csproj"
          echo "csproj=$csproj"   >> "$GITHUB_OUTPUT"
          echo "projdir=$(dirname "$csproj")" >> "$GITHUB_OUTPUT"

      - name: Restore
        run: dotnet restore "${{ steps.locate.outputs.csproj }}"

      - name: Build
        run: dotnet build "${{ steps.locate.outputs.csproj }}" -c Release --no-restore

      - name: Run Hello worker (writes to /out)
        working-directory: ${{ steps.locate.outputs.projdir }}
        env:
          OUTPUT_DIR: ${{ github.workspace }}/out
        run: dotnet run -c Release

      - name: Configure Pages
        uses: actions/configure-pages@v5
        with: { enablement: true }

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ${{ github.workspace }}/out
          name: github-pages

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4
